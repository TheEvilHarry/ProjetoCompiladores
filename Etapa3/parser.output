Terminals unused in grammar

    TK_PR_THEN
    TK_PR_FOREACH
    TK_PR_SWITCH
    TK_PR_CASE
    TK_PR_CLASS
    TK_PR_PRIVATE
    TK_PR_PUBLIC
    TK_PR_PROTECTED
    TK_PR_END
    TK_PR_DEFAULT
    TOKEN_ERRO


Grammar

    0 $accept: program $end

    1 program: globalVariable program
    2        | functionDefinition program
    3        | %empty

    4 optionalStatic: TK_PR_STATIC
    5               | %empty

    6 optionalConst: TK_PR_CONST
    7              | %empty

    8 globalVariable: optionalStatic type identifier globalVariableList ';'

    9 globalVariableList: ',' identifier globalVariableList
   10                   | %empty

   11 type: TK_PR_INT
   12     | TK_PR_FLOAT
   13     | TK_PR_CHAR
   14     | TK_PR_BOOL
   15     | TK_PR_STRING

   16 identifier: TK_IDENTIFICADOR
   17           | TK_IDENTIFICADOR '[' positive_integer ']'

   18 value: TK_LIT_INT
   19      | TK_LIT_FLOAT
   20      | TK_LIT_FALSE
   21      | TK_LIT_TRUE
   22      | TK_LIT_CHAR
   23      | TK_LIT_STRING

   24 functionDefinition: functionHeader commandBlock

   25 functionHeader: optionalStatic type TK_IDENTIFICADOR '(' headerParameters ')'

   26 headerParameters: optionalConst type TK_IDENTIFICADOR headerParametersList
   27                 | %empty

   28 headerParametersList: ',' optionalConst type TK_IDENTIFICADOR headerParametersList
   29                     | %empty

   30 commandBlock: '{' commandList '}'

   31 commandList: command commandList
   32            | %empty

   33 command: variableDeclaration ';'
   34        | attribution ';'
   35        | inputOutput ';'
   36        | functionCall ';'
   37        | shift ';'
   38        | executionControl ';'
   39        | fluxControl ';'
   40        | commandBlock ';'

   41 variableDeclaration: optionalStatic optionalConst type variable variableDeclarationList

   42 variable: TK_IDENTIFICADOR
   43         | TK_IDENTIFICADOR TK_OC_LE value
   44         | TK_IDENTIFICADOR TK_OC_LE TK_IDENTIFICADOR

   45 variableDeclarationList: ',' variable variableDeclarationList
   46                        | %empty

   47 attribution: TK_IDENTIFICADOR '=' expression
   48            | TK_IDENTIFICADOR '[' expression ']' '=' expression

   49 inputOutput: input
   50            | output

   51 output: TK_PR_OUTPUT TK_IDENTIFICADOR
   52       | TK_PR_OUTPUT value

   53 input: TK_PR_INPUT TK_IDENTIFICADOR

   54 functionCall: TK_IDENTIFICADOR '(' functionParameters ')'

   55 functionParameters: expression functionParametersList
   56                   | %empty

   57 functionParametersList: ',' expression functionParametersList
   58                       | %empty

   59 shift: TK_IDENTIFICADOR shiftOperator TK_LIT_INT
   60      | TK_IDENTIFICADOR '[' expression ']' shiftOperator positive_integer

   61 shiftOperator: TK_OC_SL
   62              | TK_OC_SR

   63 executionControl: TK_PR_RETURN expression
   64                 | TK_PR_BREAK
   65                 | TK_PR_CONTINUE

   66 fluxControl: conditional
   67            | while
   68            | for

   69 conditional: TK_PR_IF '(' expression ')' commandBlock else

   70 else: TK_PR_ELSE commandBlock
   71     | %empty

   72 while: TK_PR_WHILE '(' expression ')' TK_PR_DO commandBlock

   73 for: TK_PR_FOR '(' attribution ':' expression ':' attribution ')' commandBlock

   74 expression: orLogicalExpression '?' expression ':' expression
   75           | orLogicalExpression

   76 orLogicalExpression: orLogicalExpression orLogicalOperator andLogicalExpression
   77                    | andLogicalExpression

   78 andLogicalExpression: andLogicalExpression andLogicalOperator bitwiseOrExpression
   79                     | bitwiseOrExpression

   80 bitwiseOrExpression: bitwiseOrExpression bitwiseOrOperator bitwiseAndExpression
   81                    | bitwiseAndExpression

   82 bitwiseAndExpression: bitwiseAndExpression bitwiseAndOperator equalityExpression
   83                     | equalityExpression

   84 equalityExpression: equalityExpression equalityOperator comparisonExpression
   85                   | comparisonExpression

   86 comparisonExpression: comparisonExpression comparisonOperator sumExpression
   87                     | sumExpression

   88 sumExpression: sumExpression sumOperator multiplicationExpression
   89              | multiplicationExpression

   90 multiplicationExpression: multiplicationExpression multiplicationOperator powerExpression
   91                         | powerExpression

   92 powerExpression: powerExpression powerOperator unaryExpression
   93                | unaryExpression

   94 unaryExpression: unaryOperator unaryExpression
   95                | operand

   96 orLogicalOperator: TK_OC_OR

   97 andLogicalOperator: TK_OC_AND

   98 bitwiseOrOperator: '|'

   99 bitwiseAndOperator: '&'

  100 equalityOperator: TK_OC_EQ
  101                 | TK_OC_NE

  102 comparisonOperator: TK_OC_LE
  103                   | TK_OC_GE
  104                   | '<'
  105                   | '>'

  106 sumOperator: '+'
  107            | '-'

  108 multiplicationOperator: '*'
  109                       | '/'
  110                       | '%'

  111 powerOperator: '^'

  112 unaryOperator: '+'
  113              | '-'
  114              | '!'
  115              | '&'
  116              | '*'
  117              | '?'
  118              | '#'

  119 operand: TK_IDENTIFICADOR
  120        | TK_IDENTIFICADOR '[' expression ']'
  121        | value
  122        | functionCall
  123        | '(' expression ')'

  124 positive_integer: '+' TK_LIT_INT
  125                 | TK_LIT_INT


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 114
    '#' (35) 118
    '%' (37) 110
    '&' (38) 99 115
    '(' (40) 25 54 69 72 73 123
    ')' (41) 25 54 69 72 73 123
    '*' (42) 108 116
    '+' (43) 106 112 124
    ',' (44) 9 28 45 57
    '-' (45) 107 113
    '/' (47) 109
    ':' (58) 73 74
    ';' (59) 8 33 34 35 36 37 38 39 40
    '<' (60) 104
    '=' (61) 47 48
    '>' (62) 105
    '?' (63) 74 117
    '[' (91) 17 48 60 120
    ']' (93) 17 48 60 120
    '^' (94) 111
    '{' (123) 30
    '|' (124) 98
    '}' (125) 30
    error (256)
    TK_PR_INT (258) 11
    TK_PR_FLOAT (259) 12
    TK_PR_BOOL (260) 14
    TK_PR_CHAR (261) 13
    TK_PR_STRING (262) 15
    TK_PR_IF (263) 69
    TK_PR_THEN (264)
    TK_PR_ELSE (265) 70
    TK_PR_WHILE (266) 72
    TK_PR_DO (267) 72
    TK_PR_INPUT (268) 53
    TK_PR_OUTPUT (269) 51 52
    TK_PR_RETURN (270) 63
    TK_PR_CONST (271) 6
    TK_PR_STATIC (272) 4
    TK_PR_FOREACH (273)
    TK_PR_FOR (274) 73
    TK_PR_SWITCH (275)
    TK_PR_CASE (276)
    TK_PR_BREAK (277) 64
    TK_PR_CONTINUE (278) 65
    TK_PR_CLASS (279)
    TK_PR_PRIVATE (280)
    TK_PR_PUBLIC (281)
    TK_PR_PROTECTED (282)
    TK_PR_END (283)
    TK_PR_DEFAULT (284)
    TK_OC_LE (285) 43 44 102
    TK_OC_GE (286) 103
    TK_OC_EQ (287) 100
    TK_OC_NE (288) 101
    TK_OC_AND (289) 97
    TK_OC_OR (290) 96
    TK_OC_SL (291) 61
    TK_OC_SR (292) 62
    TK_LIT_INT (293) 18 59 124 125
    TK_LIT_FLOAT (294) 19
    TK_LIT_FALSE (295) 20
    TK_LIT_TRUE (296) 21
    TK_LIT_CHAR (297) 22
    TK_LIT_STRING (298) 23
    TK_IDENTIFICADOR (299) 16 17 25 26 28 42 43 44 47 48 51 53 54 59 60 119 120
    TOKEN_ERRO (300)


Nonterminals, with rules where they appear

    $accept (69)
        on left: 0
    program (70)
        on left: 1 2 3
        on right: 0 1 2
    optionalStatic (71)
        on left: 4 5
        on right: 8 25 41
    optionalConst (72)
        on left: 6 7
        on right: 26 28 41
    globalVariable (73)
        on left: 8
        on right: 1
    globalVariableList (74)
        on left: 9 10
        on right: 8 9
    type (75)
        on left: 11 12 13 14 15
        on right: 8 25 26 28 41
    identifier (76)
        on left: 16 17
        on right: 8 9
    value (77)
        on left: 18 19 20 21 22 23
        on right: 43 52 121
    functionDefinition (78)
        on left: 24
        on right: 2
    functionHeader (79)
        on left: 25
        on right: 24
    headerParameters (80)
        on left: 26 27
        on right: 25
    headerParametersList (81)
        on left: 28 29
        on right: 26 28
    commandBlock (82)
        on left: 30
        on right: 24 40 69 70 72 73
    commandList (83)
        on left: 31 32
        on right: 30 31
    command (84)
        on left: 33 34 35 36 37 38 39 40
        on right: 31
    variableDeclaration (85)
        on left: 41
        on right: 33
    variable (86)
        on left: 42 43 44
        on right: 41 45
    variableDeclarationList (87)
        on left: 45 46
        on right: 41 45
    attribution (88)
        on left: 47 48
        on right: 34 73
    inputOutput (89)
        on left: 49 50
        on right: 35
    output (90)
        on left: 51 52
        on right: 50
    input (91)
        on left: 53
        on right: 49
    functionCall (92)
        on left: 54
        on right: 36 122
    functionParameters (93)
        on left: 55 56
        on right: 54
    functionParametersList (94)
        on left: 57 58
        on right: 55 57
    shift (95)
        on left: 59 60
        on right: 37
    shiftOperator (96)
        on left: 61 62
        on right: 59 60
    executionControl (97)
        on left: 63 64 65
        on right: 38
    fluxControl (98)
        on left: 66 67 68
        on right: 39
    conditional (99)
        on left: 69
        on right: 66
    else (100)
        on left: 70 71
        on right: 69
    while (101)
        on left: 72
        on right: 67
    for (102)
        on left: 73
        on right: 68
    expression (103)
        on left: 74 75
        on right: 47 48 55 57 60 63 69 72 73 74 120 123
    orLogicalExpression (104)
        on left: 76 77
        on right: 74 75 76
    andLogicalExpression (105)
        on left: 78 79
        on right: 76 77 78
    bitwiseOrExpression (106)
        on left: 80 81
        on right: 78 79 80
    bitwiseAndExpression (107)
        on left: 82 83
        on right: 80 81 82
    equalityExpression (108)
        on left: 84 85
        on right: 82 83 84
    comparisonExpression (109)
        on left: 86 87
        on right: 84 85 86
    sumExpression (110)
        on left: 88 89
        on right: 86 87 88
    multiplicationExpression (111)
        on left: 90 91
        on right: 88 89 90
    powerExpression (112)
        on left: 92 93
        on right: 90 91 92
    unaryExpression (113)
        on left: 94 95
        on right: 92 93 94
    orLogicalOperator (114)
        on left: 96
        on right: 76
    andLogicalOperator (115)
        on left: 97
        on right: 78
    bitwiseOrOperator (116)
        on left: 98
        on right: 80
    bitwiseAndOperator (117)
        on left: 99
        on right: 82
    equalityOperator (118)
        on left: 100 101
        on right: 84
    comparisonOperator (119)
        on left: 102 103 104 105
        on right: 86
    sumOperator (120)
        on left: 106 107
        on right: 88
    multiplicationOperator (121)
        on left: 108 109 110
        on right: 90
    powerOperator (122)
        on left: 111
        on right: 92
    unaryOperator (123)
        on left: 112 113 114 115 116 117 118
        on right: 94
    operand (124)
        on left: 119 120 121 122 123
        on right: 95
    positive_integer (125)
        on left: 124 125
        on right: 17 60


State 0

    0 $accept: • program $end

    TK_PR_STATIC  shift, and go to state 1

    $end      reduce using rule 3 (program)
    $default  reduce using rule 5 (optionalStatic)

    program             go to state 2
    optionalStatic      go to state 3
    globalVariable      go to state 4
    functionDefinition  go to state 5
    functionHeader      go to state 6


State 1

    4 optionalStatic: TK_PR_STATIC •

    $default  reduce using rule 4 (optionalStatic)


State 2

    0 $accept: program • $end

    $end  shift, and go to state 7


State 3

    8 globalVariable: optionalStatic • type identifier globalVariableList ';'
   25 functionHeader: optionalStatic • type TK_IDENTIFICADOR '(' headerParameters ')'

    TK_PR_INT     shift, and go to state 8
    TK_PR_FLOAT   shift, and go to state 9
    TK_PR_BOOL    shift, and go to state 10
    TK_PR_CHAR    shift, and go to state 11
    TK_PR_STRING  shift, and go to state 12

    type  go to state 13


State 4

    1 program: globalVariable • program

    TK_PR_STATIC  shift, and go to state 1

    $end      reduce using rule 3 (program)
    $default  reduce using rule 5 (optionalStatic)

    program             go to state 14
    optionalStatic      go to state 3
    globalVariable      go to state 4
    functionDefinition  go to state 5
    functionHeader      go to state 6


State 5

    2 program: functionDefinition • program

    TK_PR_STATIC  shift, and go to state 1

    $end      reduce using rule 3 (program)
    $default  reduce using rule 5 (optionalStatic)

    program             go to state 15
    optionalStatic      go to state 3
    globalVariable      go to state 4
    functionDefinition  go to state 5
    functionHeader      go to state 6


State 6

   24 functionDefinition: functionHeader • commandBlock

    '{'  shift, and go to state 16

    commandBlock  go to state 17


State 7

    0 $accept: program $end •

    $default  accept


State 8

   11 type: TK_PR_INT •

    $default  reduce using rule 11 (type)


State 9

   12 type: TK_PR_FLOAT •

    $default  reduce using rule 12 (type)


State 10

   14 type: TK_PR_BOOL •

    $default  reduce using rule 14 (type)


State 11

   13 type: TK_PR_CHAR •

    $default  reduce using rule 13 (type)


State 12

   15 type: TK_PR_STRING •

    $default  reduce using rule 15 (type)


State 13

    8 globalVariable: optionalStatic type • identifier globalVariableList ';'
   25 functionHeader: optionalStatic type • TK_IDENTIFICADOR '(' headerParameters ')'

    TK_IDENTIFICADOR  shift, and go to state 18

    identifier  go to state 19


State 14

    1 program: globalVariable program •

    $default  reduce using rule 1 (program)


State 15

    2 program: functionDefinition program •

    $default  reduce using rule 2 (program)


State 16

   30 commandBlock: '{' • commandList '}'

    TK_PR_IF          shift, and go to state 20
    TK_PR_WHILE       shift, and go to state 21
    TK_PR_INPUT       shift, and go to state 22
    TK_PR_OUTPUT      shift, and go to state 23
    TK_PR_RETURN      shift, and go to state 24
    TK_PR_STATIC      shift, and go to state 1
    TK_PR_FOR         shift, and go to state 25
    TK_PR_BREAK       shift, and go to state 26
    TK_PR_CONTINUE    shift, and go to state 27
    TK_IDENTIFICADOR  shift, and go to state 28
    '{'               shift, and go to state 16

    '}'       reduce using rule 32 (commandList)
    $default  reduce using rule 5 (optionalStatic)

    optionalStatic       go to state 29
    commandBlock         go to state 30
    commandList          go to state 31
    command              go to state 32
    variableDeclaration  go to state 33
    attribution          go to state 34
    inputOutput          go to state 35
    output               go to state 36
    input                go to state 37
    functionCall         go to state 38
    shift                go to state 39
    executionControl     go to state 40
    fluxControl          go to state 41
    conditional          go to state 42
    while                go to state 43
    for                  go to state 44


State 17

   24 functionDefinition: functionHeader commandBlock •

    $default  reduce using rule 24 (functionDefinition)


State 18

   16 identifier: TK_IDENTIFICADOR •
   17           | TK_IDENTIFICADOR • '[' positive_integer ']'
   25 functionHeader: optionalStatic type TK_IDENTIFICADOR • '(' headerParameters ')'

    '['  shift, and go to state 45
    '('  shift, and go to state 46

    $default  reduce using rule 16 (identifier)


State 19

    8 globalVariable: optionalStatic type identifier • globalVariableList ';'

    ','  shift, and go to state 47

    $default  reduce using rule 10 (globalVariableList)

    globalVariableList  go to state 48


State 20

   69 conditional: TK_PR_IF • '(' expression ')' commandBlock else

    '('  shift, and go to state 49


State 21

   72 while: TK_PR_WHILE • '(' expression ')' TK_PR_DO commandBlock

    '('  shift, and go to state 50


State 22

   53 input: TK_PR_INPUT • TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 51


State 23

   51 output: TK_PR_OUTPUT • TK_IDENTIFICADOR
   52       | TK_PR_OUTPUT • value

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 58

    value  go to state 59


State 24

   63 executionControl: TK_PR_RETURN • expression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 71
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 25

   73 for: TK_PR_FOR • '(' attribution ':' expression ':' attribution ')' commandBlock

    '('  shift, and go to state 84


State 26

   64 executionControl: TK_PR_BREAK •

    $default  reduce using rule 64 (executionControl)


State 27

   65 executionControl: TK_PR_CONTINUE •

    $default  reduce using rule 65 (executionControl)


State 28

   47 attribution: TK_IDENTIFICADOR • '=' expression
   48            | TK_IDENTIFICADOR • '[' expression ']' '=' expression
   54 functionCall: TK_IDENTIFICADOR • '(' functionParameters ')'
   59 shift: TK_IDENTIFICADOR • shiftOperator TK_LIT_INT
   60      | TK_IDENTIFICADOR • '[' expression ']' shiftOperator positive_integer

    TK_OC_SL  shift, and go to state 85
    TK_OC_SR  shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '='       shift, and go to state 89

    shiftOperator  go to state 90


State 29

   41 variableDeclaration: optionalStatic • optionalConst type variable variableDeclarationList

    TK_PR_CONST  shift, and go to state 91

    $default  reduce using rule 7 (optionalConst)

    optionalConst  go to state 92


State 30

   40 command: commandBlock • ';'

    ';'  shift, and go to state 93


State 31

   30 commandBlock: '{' commandList • '}'

    '}'  shift, and go to state 94


State 32

   31 commandList: command • commandList

    TK_PR_IF          shift, and go to state 20
    TK_PR_WHILE       shift, and go to state 21
    TK_PR_INPUT       shift, and go to state 22
    TK_PR_OUTPUT      shift, and go to state 23
    TK_PR_RETURN      shift, and go to state 24
    TK_PR_STATIC      shift, and go to state 1
    TK_PR_FOR         shift, and go to state 25
    TK_PR_BREAK       shift, and go to state 26
    TK_PR_CONTINUE    shift, and go to state 27
    TK_IDENTIFICADOR  shift, and go to state 28
    '{'               shift, and go to state 16

    '}'       reduce using rule 32 (commandList)
    $default  reduce using rule 5 (optionalStatic)

    optionalStatic       go to state 29
    commandBlock         go to state 30
    commandList          go to state 95
    command              go to state 32
    variableDeclaration  go to state 33
    attribution          go to state 34
    inputOutput          go to state 35
    output               go to state 36
    input                go to state 37
    functionCall         go to state 38
    shift                go to state 39
    executionControl     go to state 40
    fluxControl          go to state 41
    conditional          go to state 42
    while                go to state 43
    for                  go to state 44


State 33

   33 command: variableDeclaration • ';'

    ';'  shift, and go to state 96


State 34

   34 command: attribution • ';'

    ';'  shift, and go to state 97


State 35

   35 command: inputOutput • ';'

    ';'  shift, and go to state 98


State 36

   50 inputOutput: output •

    $default  reduce using rule 50 (inputOutput)


State 37

   49 inputOutput: input •

    $default  reduce using rule 49 (inputOutput)


State 38

   36 command: functionCall • ';'

    ';'  shift, and go to state 99


State 39

   37 command: shift • ';'

    ';'  shift, and go to state 100


State 40

   38 command: executionControl • ';'

    ';'  shift, and go to state 101


State 41

   39 command: fluxControl • ';'

    ';'  shift, and go to state 102


State 42

   66 fluxControl: conditional •

    $default  reduce using rule 66 (fluxControl)


State 43

   67 fluxControl: while •

    $default  reduce using rule 67 (fluxControl)


State 44

   68 fluxControl: for •

    $default  reduce using rule 68 (fluxControl)


State 45

   17 identifier: TK_IDENTIFICADOR '[' • positive_integer ']'

    TK_LIT_INT  shift, and go to state 103
    '+'         shift, and go to state 104

    positive_integer  go to state 105


State 46

   25 functionHeader: optionalStatic type TK_IDENTIFICADOR '(' • headerParameters ')'

    TK_PR_CONST  shift, and go to state 91

    ')'       reduce using rule 27 (headerParameters)
    $default  reduce using rule 7 (optionalConst)

    optionalConst     go to state 106
    headerParameters  go to state 107


State 47

    9 globalVariableList: ',' • identifier globalVariableList

    TK_IDENTIFICADOR  shift, and go to state 108

    identifier  go to state 109


State 48

    8 globalVariable: optionalStatic type identifier globalVariableList • ';'

    ';'  shift, and go to state 110


State 49

   69 conditional: TK_PR_IF '(' • expression ')' commandBlock else

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 111
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 50

   72 while: TK_PR_WHILE '(' • expression ')' TK_PR_DO commandBlock

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 112
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 51

   53 input: TK_PR_INPUT TK_IDENTIFICADOR •

    $default  reduce using rule 53 (input)


State 52

   18 value: TK_LIT_INT •

    $default  reduce using rule 18 (value)


State 53

   19 value: TK_LIT_FLOAT •

    $default  reduce using rule 19 (value)


State 54

   20 value: TK_LIT_FALSE •

    $default  reduce using rule 20 (value)


State 55

   21 value: TK_LIT_TRUE •

    $default  reduce using rule 21 (value)


State 56

   22 value: TK_LIT_CHAR •

    $default  reduce using rule 22 (value)


State 57

   23 value: TK_LIT_STRING •

    $default  reduce using rule 23 (value)


State 58

   51 output: TK_PR_OUTPUT TK_IDENTIFICADOR •

    $default  reduce using rule 51 (output)


State 59

   52 output: TK_PR_OUTPUT value •

    $default  reduce using rule 52 (output)


State 60

   54 functionCall: TK_IDENTIFICADOR • '(' functionParameters ')'
  119 operand: TK_IDENTIFICADOR •
  120        | TK_IDENTIFICADOR • '[' expression ']'

    '['  shift, and go to state 113
    '('  shift, and go to state 88

    $default  reduce using rule 119 (operand)


State 61

  123 operand: '(' • expression ')'

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 114
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 62

  117 unaryOperator: '?' •

    $default  reduce using rule 117 (unaryOperator)


State 63

  115 unaryOperator: '&' •

    $default  reduce using rule 115 (unaryOperator)


State 64

  112 unaryOperator: '+' •

    $default  reduce using rule 112 (unaryOperator)


State 65

  113 unaryOperator: '-' •

    $default  reduce using rule 113 (unaryOperator)


State 66

  116 unaryOperator: '*' •

    $default  reduce using rule 116 (unaryOperator)


State 67

  114 unaryOperator: '!' •

    $default  reduce using rule 114 (unaryOperator)


State 68

  118 unaryOperator: '#' •

    $default  reduce using rule 118 (unaryOperator)


State 69

  121 operand: value •

    $default  reduce using rule 121 (operand)


State 70

  122 operand: functionCall •

    $default  reduce using rule 122 (operand)


State 71

   63 executionControl: TK_PR_RETURN expression •

    $default  reduce using rule 63 (executionControl)


State 72

   74 expression: orLogicalExpression • '?' expression ':' expression
   75           | orLogicalExpression •
   76 orLogicalExpression: orLogicalExpression • orLogicalOperator andLogicalExpression

    TK_OC_OR  shift, and go to state 115
    '?'       shift, and go to state 116

    $default  reduce using rule 75 (expression)

    orLogicalOperator  go to state 117


State 73

   77 orLogicalExpression: andLogicalExpression •
   78 andLogicalExpression: andLogicalExpression • andLogicalOperator bitwiseOrExpression

    TK_OC_AND  shift, and go to state 118

    $default  reduce using rule 77 (orLogicalExpression)

    andLogicalOperator  go to state 119


State 74

   79 andLogicalExpression: bitwiseOrExpression •
   80 bitwiseOrExpression: bitwiseOrExpression • bitwiseOrOperator bitwiseAndExpression

    '|'  shift, and go to state 120

    $default  reduce using rule 79 (andLogicalExpression)

    bitwiseOrOperator  go to state 121


State 75

   81 bitwiseOrExpression: bitwiseAndExpression •
   82 bitwiseAndExpression: bitwiseAndExpression • bitwiseAndOperator equalityExpression

    '&'  shift, and go to state 122

    $default  reduce using rule 81 (bitwiseOrExpression)

    bitwiseAndOperator  go to state 123


State 76

   83 bitwiseAndExpression: equalityExpression •
   84 equalityExpression: equalityExpression • equalityOperator comparisonExpression

    TK_OC_EQ  shift, and go to state 124
    TK_OC_NE  shift, and go to state 125

    $default  reduce using rule 83 (bitwiseAndExpression)

    equalityOperator  go to state 126


State 77

   85 equalityExpression: comparisonExpression •
   86 comparisonExpression: comparisonExpression • comparisonOperator sumExpression

    TK_OC_LE  shift, and go to state 127
    TK_OC_GE  shift, and go to state 128
    '<'       shift, and go to state 129
    '>'       shift, and go to state 130

    $default  reduce using rule 85 (equalityExpression)

    comparisonOperator  go to state 131


State 78

   87 comparisonExpression: sumExpression •
   88 sumExpression: sumExpression • sumOperator multiplicationExpression

    '+'  shift, and go to state 132
    '-'  shift, and go to state 133

    $default  reduce using rule 87 (comparisonExpression)

    sumOperator  go to state 134


State 79

   89 sumExpression: multiplicationExpression •
   90 multiplicationExpression: multiplicationExpression • multiplicationOperator powerExpression

    '*'  shift, and go to state 135
    '/'  shift, and go to state 136
    '%'  shift, and go to state 137

    $default  reduce using rule 89 (sumExpression)

    multiplicationOperator  go to state 138


State 80

   91 multiplicationExpression: powerExpression •
   92 powerExpression: powerExpression • powerOperator unaryExpression

    '^'  shift, and go to state 139

    $default  reduce using rule 91 (multiplicationExpression)

    powerOperator  go to state 140


State 81

   93 powerExpression: unaryExpression •

    $default  reduce using rule 93 (powerExpression)


State 82

   94 unaryExpression: unaryOperator • unaryExpression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value            go to state 69
    functionCall     go to state 70
    unaryExpression  go to state 141
    unaryOperator    go to state 82
    operand          go to state 83


State 83

   95 unaryExpression: operand •

    $default  reduce using rule 95 (unaryExpression)


State 84

   73 for: TK_PR_FOR '(' • attribution ':' expression ':' attribution ')' commandBlock

    TK_IDENTIFICADOR  shift, and go to state 142

    attribution  go to state 143


State 85

   61 shiftOperator: TK_OC_SL •

    $default  reduce using rule 61 (shiftOperator)


State 86

   62 shiftOperator: TK_OC_SR •

    $default  reduce using rule 62 (shiftOperator)


State 87

   48 attribution: TK_IDENTIFICADOR '[' • expression ']' '=' expression
   60 shift: TK_IDENTIFICADOR '[' • expression ']' shiftOperator positive_integer

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 144
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 88

   54 functionCall: TK_IDENTIFICADOR '(' • functionParameters ')'

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    $default  reduce using rule 56 (functionParameters)

    value                     go to state 69
    functionCall              go to state 70
    functionParameters        go to state 145
    expression                go to state 146
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 89

   47 attribution: TK_IDENTIFICADOR '=' • expression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 147
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 90

   59 shift: TK_IDENTIFICADOR shiftOperator • TK_LIT_INT

    TK_LIT_INT  shift, and go to state 148


State 91

    6 optionalConst: TK_PR_CONST •

    $default  reduce using rule 6 (optionalConst)


State 92

   41 variableDeclaration: optionalStatic optionalConst • type variable variableDeclarationList

    TK_PR_INT     shift, and go to state 8
    TK_PR_FLOAT   shift, and go to state 9
    TK_PR_BOOL    shift, and go to state 10
    TK_PR_CHAR    shift, and go to state 11
    TK_PR_STRING  shift, and go to state 12

    type  go to state 149


State 93

   40 command: commandBlock ';' •

    $default  reduce using rule 40 (command)


State 94

   30 commandBlock: '{' commandList '}' •

    $default  reduce using rule 30 (commandBlock)


State 95

   31 commandList: command commandList •

    $default  reduce using rule 31 (commandList)


State 96

   33 command: variableDeclaration ';' •

    $default  reduce using rule 33 (command)


State 97

   34 command: attribution ';' •

    $default  reduce using rule 34 (command)


State 98

   35 command: inputOutput ';' •

    $default  reduce using rule 35 (command)


State 99

   36 command: functionCall ';' •

    $default  reduce using rule 36 (command)


State 100

   37 command: shift ';' •

    $default  reduce using rule 37 (command)


State 101

   38 command: executionControl ';' •

    $default  reduce using rule 38 (command)


State 102

   39 command: fluxControl ';' •

    $default  reduce using rule 39 (command)


State 103

  125 positive_integer: TK_LIT_INT •

    $default  reduce using rule 125 (positive_integer)


State 104

  124 positive_integer: '+' • TK_LIT_INT

    TK_LIT_INT  shift, and go to state 150


State 105

   17 identifier: TK_IDENTIFICADOR '[' positive_integer • ']'

    ']'  shift, and go to state 151


State 106

   26 headerParameters: optionalConst • type TK_IDENTIFICADOR headerParametersList

    TK_PR_INT     shift, and go to state 8
    TK_PR_FLOAT   shift, and go to state 9
    TK_PR_BOOL    shift, and go to state 10
    TK_PR_CHAR    shift, and go to state 11
    TK_PR_STRING  shift, and go to state 12

    type  go to state 152


State 107

   25 functionHeader: optionalStatic type TK_IDENTIFICADOR '(' headerParameters • ')'

    ')'  shift, and go to state 153


State 108

   16 identifier: TK_IDENTIFICADOR •
   17           | TK_IDENTIFICADOR • '[' positive_integer ']'

    '['  shift, and go to state 45

    $default  reduce using rule 16 (identifier)


State 109

    9 globalVariableList: ',' identifier • globalVariableList

    ','  shift, and go to state 47

    $default  reduce using rule 10 (globalVariableList)

    globalVariableList  go to state 154


State 110

    8 globalVariable: optionalStatic type identifier globalVariableList ';' •

    $default  reduce using rule 8 (globalVariable)


State 111

   69 conditional: TK_PR_IF '(' expression • ')' commandBlock else

    ')'  shift, and go to state 155


State 112

   72 while: TK_PR_WHILE '(' expression • ')' TK_PR_DO commandBlock

    ')'  shift, and go to state 156


State 113

  120 operand: TK_IDENTIFICADOR '[' • expression ']'

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 157
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 114

  123 operand: '(' expression • ')'

    ')'  shift, and go to state 158


State 115

   96 orLogicalOperator: TK_OC_OR •

    $default  reduce using rule 96 (orLogicalOperator)


State 116

   74 expression: orLogicalExpression '?' • expression ':' expression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 159
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 117

   76 orLogicalExpression: orLogicalExpression orLogicalOperator • andLogicalExpression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    andLogicalExpression      go to state 160
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 118

   97 andLogicalOperator: TK_OC_AND •

    $default  reduce using rule 97 (andLogicalOperator)


State 119

   78 andLogicalExpression: andLogicalExpression andLogicalOperator • bitwiseOrExpression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    bitwiseOrExpression       go to state 161
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 120

   98 bitwiseOrOperator: '|' •

    $default  reduce using rule 98 (bitwiseOrOperator)


State 121

   80 bitwiseOrExpression: bitwiseOrExpression bitwiseOrOperator • bitwiseAndExpression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    bitwiseAndExpression      go to state 162
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 122

   99 bitwiseAndOperator: '&' •

    $default  reduce using rule 99 (bitwiseAndOperator)


State 123

   82 bitwiseAndExpression: bitwiseAndExpression bitwiseAndOperator • equalityExpression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    equalityExpression        go to state 163
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 124

  100 equalityOperator: TK_OC_EQ •

    $default  reduce using rule 100 (equalityOperator)


State 125

  101 equalityOperator: TK_OC_NE •

    $default  reduce using rule 101 (equalityOperator)


State 126

   84 equalityExpression: equalityExpression equalityOperator • comparisonExpression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    comparisonExpression      go to state 164
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 127

  102 comparisonOperator: TK_OC_LE •

    $default  reduce using rule 102 (comparisonOperator)


State 128

  103 comparisonOperator: TK_OC_GE •

    $default  reduce using rule 103 (comparisonOperator)


State 129

  104 comparisonOperator: '<' •

    $default  reduce using rule 104 (comparisonOperator)


State 130

  105 comparisonOperator: '>' •

    $default  reduce using rule 105 (comparisonOperator)


State 131

   86 comparisonExpression: comparisonExpression comparisonOperator • sumExpression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    sumExpression             go to state 165
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 132

  106 sumOperator: '+' •

    $default  reduce using rule 106 (sumOperator)


State 133

  107 sumOperator: '-' •

    $default  reduce using rule 107 (sumOperator)


State 134

   88 sumExpression: sumExpression sumOperator • multiplicationExpression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    multiplicationExpression  go to state 166
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 135

  108 multiplicationOperator: '*' •

    $default  reduce using rule 108 (multiplicationOperator)


State 136

  109 multiplicationOperator: '/' •

    $default  reduce using rule 109 (multiplicationOperator)


State 137

  110 multiplicationOperator: '%' •

    $default  reduce using rule 110 (multiplicationOperator)


State 138

   90 multiplicationExpression: multiplicationExpression multiplicationOperator • powerExpression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value            go to state 69
    functionCall     go to state 70
    powerExpression  go to state 167
    unaryExpression  go to state 81
    unaryOperator    go to state 82
    operand          go to state 83


State 139

  111 powerOperator: '^' •

    $default  reduce using rule 111 (powerOperator)


State 140

   92 powerExpression: powerExpression powerOperator • unaryExpression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value            go to state 69
    functionCall     go to state 70
    unaryExpression  go to state 168
    unaryOperator    go to state 82
    operand          go to state 83


State 141

   94 unaryExpression: unaryOperator unaryExpression •

    $default  reduce using rule 94 (unaryExpression)


State 142

   47 attribution: TK_IDENTIFICADOR • '=' expression
   48            | TK_IDENTIFICADOR • '[' expression ']' '=' expression

    '['  shift, and go to state 169
    '='  shift, and go to state 89


State 143

   73 for: TK_PR_FOR '(' attribution • ':' expression ':' attribution ')' commandBlock

    ':'  shift, and go to state 170


State 144

   48 attribution: TK_IDENTIFICADOR '[' expression • ']' '=' expression
   60 shift: TK_IDENTIFICADOR '[' expression • ']' shiftOperator positive_integer

    ']'  shift, and go to state 171


State 145

   54 functionCall: TK_IDENTIFICADOR '(' functionParameters • ')'

    ')'  shift, and go to state 172


State 146

   55 functionParameters: expression • functionParametersList

    ','  shift, and go to state 173

    $default  reduce using rule 58 (functionParametersList)

    functionParametersList  go to state 174


State 147

   47 attribution: TK_IDENTIFICADOR '=' expression •

    $default  reduce using rule 47 (attribution)


State 148

   59 shift: TK_IDENTIFICADOR shiftOperator TK_LIT_INT •

    $default  reduce using rule 59 (shift)


State 149

   41 variableDeclaration: optionalStatic optionalConst type • variable variableDeclarationList

    TK_IDENTIFICADOR  shift, and go to state 175

    variable  go to state 176


State 150

  124 positive_integer: '+' TK_LIT_INT •

    $default  reduce using rule 124 (positive_integer)


State 151

   17 identifier: TK_IDENTIFICADOR '[' positive_integer ']' •

    $default  reduce using rule 17 (identifier)


State 152

   26 headerParameters: optionalConst type • TK_IDENTIFICADOR headerParametersList

    TK_IDENTIFICADOR  shift, and go to state 177


State 153

   25 functionHeader: optionalStatic type TK_IDENTIFICADOR '(' headerParameters ')' •

    $default  reduce using rule 25 (functionHeader)


State 154

    9 globalVariableList: ',' identifier globalVariableList •

    $default  reduce using rule 9 (globalVariableList)


State 155

   69 conditional: TK_PR_IF '(' expression ')' • commandBlock else

    '{'  shift, and go to state 16

    commandBlock  go to state 178


State 156

   72 while: TK_PR_WHILE '(' expression ')' • TK_PR_DO commandBlock

    TK_PR_DO  shift, and go to state 179


State 157

  120 operand: TK_IDENTIFICADOR '[' expression • ']'

    ']'  shift, and go to state 180


State 158

  123 operand: '(' expression ')' •

    $default  reduce using rule 123 (operand)


State 159

   74 expression: orLogicalExpression '?' expression • ':' expression

    ':'  shift, and go to state 181


State 160

   76 orLogicalExpression: orLogicalExpression orLogicalOperator andLogicalExpression •
   78 andLogicalExpression: andLogicalExpression • andLogicalOperator bitwiseOrExpression

    TK_OC_AND  shift, and go to state 118

    $default  reduce using rule 76 (orLogicalExpression)

    andLogicalOperator  go to state 119


State 161

   78 andLogicalExpression: andLogicalExpression andLogicalOperator bitwiseOrExpression •
   80 bitwiseOrExpression: bitwiseOrExpression • bitwiseOrOperator bitwiseAndExpression

    '|'  shift, and go to state 120

    $default  reduce using rule 78 (andLogicalExpression)

    bitwiseOrOperator  go to state 121


State 162

   80 bitwiseOrExpression: bitwiseOrExpression bitwiseOrOperator bitwiseAndExpression •
   82 bitwiseAndExpression: bitwiseAndExpression • bitwiseAndOperator equalityExpression

    '&'  shift, and go to state 122

    $default  reduce using rule 80 (bitwiseOrExpression)

    bitwiseAndOperator  go to state 123


State 163

   82 bitwiseAndExpression: bitwiseAndExpression bitwiseAndOperator equalityExpression •
   84 equalityExpression: equalityExpression • equalityOperator comparisonExpression

    TK_OC_EQ  shift, and go to state 124
    TK_OC_NE  shift, and go to state 125

    $default  reduce using rule 82 (bitwiseAndExpression)

    equalityOperator  go to state 126


State 164

   84 equalityExpression: equalityExpression equalityOperator comparisonExpression •
   86 comparisonExpression: comparisonExpression • comparisonOperator sumExpression

    TK_OC_LE  shift, and go to state 127
    TK_OC_GE  shift, and go to state 128
    '<'       shift, and go to state 129
    '>'       shift, and go to state 130

    $default  reduce using rule 84 (equalityExpression)

    comparisonOperator  go to state 131


State 165

   86 comparisonExpression: comparisonExpression comparisonOperator sumExpression •
   88 sumExpression: sumExpression • sumOperator multiplicationExpression

    '+'  shift, and go to state 132
    '-'  shift, and go to state 133

    $default  reduce using rule 86 (comparisonExpression)

    sumOperator  go to state 134


State 166

   88 sumExpression: sumExpression sumOperator multiplicationExpression •
   90 multiplicationExpression: multiplicationExpression • multiplicationOperator powerExpression

    '*'  shift, and go to state 135
    '/'  shift, and go to state 136
    '%'  shift, and go to state 137

    $default  reduce using rule 88 (sumExpression)

    multiplicationOperator  go to state 138


State 167

   90 multiplicationExpression: multiplicationExpression multiplicationOperator powerExpression •
   92 powerExpression: powerExpression • powerOperator unaryExpression

    '^'  shift, and go to state 139

    $default  reduce using rule 90 (multiplicationExpression)

    powerOperator  go to state 140


State 168

   92 powerExpression: powerExpression powerOperator unaryExpression •

    $default  reduce using rule 92 (powerExpression)


State 169

   48 attribution: TK_IDENTIFICADOR '[' • expression ']' '=' expression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 182
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 170

   73 for: TK_PR_FOR '(' attribution ':' • expression ':' attribution ')' commandBlock

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 183
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 171

   48 attribution: TK_IDENTIFICADOR '[' expression ']' • '=' expression
   60 shift: TK_IDENTIFICADOR '[' expression ']' • shiftOperator positive_integer

    TK_OC_SL  shift, and go to state 85
    TK_OC_SR  shift, and go to state 86
    '='       shift, and go to state 184

    shiftOperator  go to state 185


State 172

   54 functionCall: TK_IDENTIFICADOR '(' functionParameters ')' •

    $default  reduce using rule 54 (functionCall)


State 173

   57 functionParametersList: ',' • expression functionParametersList

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 186
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 174

   55 functionParameters: expression functionParametersList •

    $default  reduce using rule 55 (functionParameters)


State 175

   42 variable: TK_IDENTIFICADOR •
   43         | TK_IDENTIFICADOR • TK_OC_LE value
   44         | TK_IDENTIFICADOR • TK_OC_LE TK_IDENTIFICADOR

    TK_OC_LE  shift, and go to state 187

    $default  reduce using rule 42 (variable)


State 176

   41 variableDeclaration: optionalStatic optionalConst type variable • variableDeclarationList

    ','  shift, and go to state 188

    $default  reduce using rule 46 (variableDeclarationList)

    variableDeclarationList  go to state 189


State 177

   26 headerParameters: optionalConst type TK_IDENTIFICADOR • headerParametersList

    ','  shift, and go to state 190

    $default  reduce using rule 29 (headerParametersList)

    headerParametersList  go to state 191


State 178

   69 conditional: TK_PR_IF '(' expression ')' commandBlock • else

    TK_PR_ELSE  shift, and go to state 192

    $default  reduce using rule 71 (else)

    else  go to state 193


State 179

   72 while: TK_PR_WHILE '(' expression ')' TK_PR_DO • commandBlock

    '{'  shift, and go to state 16

    commandBlock  go to state 194


State 180

  120 operand: TK_IDENTIFICADOR '[' expression ']' •

    $default  reduce using rule 120 (operand)


State 181

   74 expression: orLogicalExpression '?' expression ':' • expression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 195
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 182

   48 attribution: TK_IDENTIFICADOR '[' expression • ']' '=' expression

    ']'  shift, and go to state 196


State 183

   73 for: TK_PR_FOR '(' attribution ':' expression • ':' attribution ')' commandBlock

    ':'  shift, and go to state 197


State 184

   48 attribution: TK_IDENTIFICADOR '[' expression ']' '=' • expression

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 60
    '('               shift, and go to state 61
    '?'               shift, and go to state 62
    '&'               shift, and go to state 63
    '+'               shift, and go to state 64
    '-'               shift, and go to state 65
    '*'               shift, and go to state 66
    '!'               shift, and go to state 67
    '#'               shift, and go to state 68

    value                     go to state 69
    functionCall              go to state 70
    expression                go to state 198
    orLogicalExpression       go to state 72
    andLogicalExpression      go to state 73
    bitwiseOrExpression       go to state 74
    bitwiseAndExpression      go to state 75
    equalityExpression        go to state 76
    comparisonExpression      go to state 77
    sumExpression             go to state 78
    multiplicationExpression  go to state 79
    powerExpression           go to state 80
    unaryExpression           go to state 81
    unaryOperator             go to state 82
    operand                   go to state 83


State 185

   60 shift: TK_IDENTIFICADOR '[' expression ']' shiftOperator • positive_integer

    TK_LIT_INT  shift, and go to state 103
    '+'         shift, and go to state 104

    positive_integer  go to state 199


State 186

   57 functionParametersList: ',' expression • functionParametersList

    ','  shift, and go to state 173

    $default  reduce using rule 58 (functionParametersList)

    functionParametersList  go to state 200


State 187

   43 variable: TK_IDENTIFICADOR TK_OC_LE • value
   44         | TK_IDENTIFICADOR TK_OC_LE • TK_IDENTIFICADOR

    TK_LIT_INT        shift, and go to state 52
    TK_LIT_FLOAT      shift, and go to state 53
    TK_LIT_FALSE      shift, and go to state 54
    TK_LIT_TRUE       shift, and go to state 55
    TK_LIT_CHAR       shift, and go to state 56
    TK_LIT_STRING     shift, and go to state 57
    TK_IDENTIFICADOR  shift, and go to state 201

    value  go to state 202


State 188

   45 variableDeclarationList: ',' • variable variableDeclarationList

    TK_IDENTIFICADOR  shift, and go to state 175

    variable  go to state 203


State 189

   41 variableDeclaration: optionalStatic optionalConst type variable variableDeclarationList •

    $default  reduce using rule 41 (variableDeclaration)


State 190

   28 headerParametersList: ',' • optionalConst type TK_IDENTIFICADOR headerParametersList

    TK_PR_CONST  shift, and go to state 91

    $default  reduce using rule 7 (optionalConst)

    optionalConst  go to state 204


State 191

   26 headerParameters: optionalConst type TK_IDENTIFICADOR headerParametersList •

    $default  reduce using rule 26 (headerParameters)


State 192

   70 else: TK_PR_ELSE • commandBlock

    '{'  shift, and go to state 16

    commandBlock  go to state 205


State 193

   69 conditional: TK_PR_IF '(' expression ')' commandBlock else •

    $default  reduce using rule 69 (conditional)


State 194

   72 while: TK_PR_WHILE '(' expression ')' TK_PR_DO commandBlock •

    $default  reduce using rule 72 (while)


State 195

   74 expression: orLogicalExpression '?' expression ':' expression •

    $default  reduce using rule 74 (expression)


State 196

   48 attribution: TK_IDENTIFICADOR '[' expression ']' • '=' expression

    '='  shift, and go to state 184


State 197

   73 for: TK_PR_FOR '(' attribution ':' expression ':' • attribution ')' commandBlock

    TK_IDENTIFICADOR  shift, and go to state 142

    attribution  go to state 206


State 198

   48 attribution: TK_IDENTIFICADOR '[' expression ']' '=' expression •

    $default  reduce using rule 48 (attribution)


State 199

   60 shift: TK_IDENTIFICADOR '[' expression ']' shiftOperator positive_integer •

    $default  reduce using rule 60 (shift)


State 200

   57 functionParametersList: ',' expression functionParametersList •

    $default  reduce using rule 57 (functionParametersList)


State 201

   44 variable: TK_IDENTIFICADOR TK_OC_LE TK_IDENTIFICADOR •

    $default  reduce using rule 44 (variable)


State 202

   43 variable: TK_IDENTIFICADOR TK_OC_LE value •

    $default  reduce using rule 43 (variable)


State 203

   45 variableDeclarationList: ',' variable • variableDeclarationList

    ','  shift, and go to state 188

    $default  reduce using rule 46 (variableDeclarationList)

    variableDeclarationList  go to state 207


State 204

   28 headerParametersList: ',' optionalConst • type TK_IDENTIFICADOR headerParametersList

    TK_PR_INT     shift, and go to state 8
    TK_PR_FLOAT   shift, and go to state 9
    TK_PR_BOOL    shift, and go to state 10
    TK_PR_CHAR    shift, and go to state 11
    TK_PR_STRING  shift, and go to state 12

    type  go to state 208


State 205

   70 else: TK_PR_ELSE commandBlock •

    $default  reduce using rule 70 (else)


State 206

   73 for: TK_PR_FOR '(' attribution ':' expression ':' attribution • ')' commandBlock

    ')'  shift, and go to state 209


State 207

   45 variableDeclarationList: ',' variable variableDeclarationList •

    $default  reduce using rule 45 (variableDeclarationList)


State 208

   28 headerParametersList: ',' optionalConst type • TK_IDENTIFICADOR headerParametersList

    TK_IDENTIFICADOR  shift, and go to state 210


State 209

   73 for: TK_PR_FOR '(' attribution ':' expression ':' attribution ')' • commandBlock

    '{'  shift, and go to state 16

    commandBlock  go to state 211


State 210

   28 headerParametersList: ',' optionalConst type TK_IDENTIFICADOR • headerParametersList

    ','  shift, and go to state 190

    $default  reduce using rule 29 (headerParametersList)

    headerParametersList  go to state 212


State 211

   73 for: TK_PR_FOR '(' attribution ':' expression ':' attribution ')' commandBlock •

    $default  reduce using rule 73 (for)


State 212

   28 headerParametersList: ',' optionalConst type TK_IDENTIFICADOR headerParametersList •

    $default  reduce using rule 28 (headerParametersList)
